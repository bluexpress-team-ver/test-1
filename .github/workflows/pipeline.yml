name: Template Vercel Deploy

on:
  push:
    branches: [development, staging, production]
    paths-ignore:
      - '.github/workflows/**'
  workflow_call:
    inputs:
      project_id:
        required: true
        type: string
        default: ''

jobs:
  sonar:
    runs-on: ubuntu-latest
    steps:
    - name: SonarQube Scan
      if: github.ref_name == 'development'
      uses: Blue-Express/sonar-scan-action@master
      id: check
      with:
        sonarqube_url: ${{ secrets.SONARQUBE_DEV_URL }}
        sonarqube_token: ${{ secrets.SONARQUBE_DEV_TOKEN }}
        projectKey: ${{ github.event.repository.name }}

  vercel:
    runs-on: ubuntu-latest
    name: Deploy app

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '14'
          registry-url: https://registry.npmjs.org/

      - name: Deploy to Vercel
        run: |
         VERCEL_ORG_ID=${VERCEL_TEAM_BLUEXPRESS_ID} VERCEL_PROJECT_ID=${{ inputs.project_id }} npx vercel --build-env BX_ENV=${{ github.ref_name }} -t ${VERCEL_TOKEN} --scope blueexpress -m githubCommitSha=${{ github.sha }} -m githubCommitAuthorName=${{ github.actor }} -m githubCommitAuthorLogin=${{ github.actor }} -m githubDeployment=1 -m githubOrg=${{ github.repository_owner}} -m githubRepo=${{ github.event.repository.name }} -m githubCommitOrg=${{ github.repository_owner}} -m githubCommitRepo=${{ github.event.repository.name }} -m githubCommitMessage="${{ github.event.head_commit.message }}" -m githubCommitRef=development --confirm
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_TEAM_BLUEXPRESS_ID: ${{ secrets.VERCEL_TEAM_BLUEXPRESS_ID }}
          NPM_TOKEN: ${{ secrets.NPM_VERCEL }}
